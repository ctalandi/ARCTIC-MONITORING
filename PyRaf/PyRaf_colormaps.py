##########################################################################
### Copyright (c) 2011 by Raphael Dussin. For licensing, distribution 
### conditions, contact information, and additional documentation see
### in docs directory

##########################################################################
###                                                                    ###
###                          This is PyRaf (colormaps)                 ###
###                                                                    ###
##########################################################################
### IMPORT the packages

try:
	from matplotlib import pylab as plt
except:
	print 'matplotlib is not available on your machine'
        print 'check python path or install this package' ; exit()

#########################################################
###         colormaps (adapted from chart/coupe)      ###
#########################################################

def gen_pal_Testu():
	pal = ( ( 1.0000, 1.0000, 1.0000 ),
	( 0.9923, 0.9753, 0.9985 ),
	( 0.9692, 0.9005, 0.9941 ),
	( 0.9460, 0.8258, 0.9897 ),
	( 0.9228, 0.7510, 0.9853 ),
	( 0.8996, 0.6763, 0.9809 ),
	( 0.8765, 0.6015, 0.9765 ),
	( 0.8533, 0.5268, 0.9721 ),
	( 0.8301, 0.4520, 0.9677 ),
	( 0.8070, 0.3773, 0.9633 ),
	( 0.7838, 0.3025, 0.9588 ),
	( 0.7606, 0.2278, 0.9544 ),
	( 0.7374, 0.1530, 0.9500 ),
	( 0.7221, 0.0783, 0.9563 ),
	( 0.7258, 0.0035, 0.9885 ),
	( 0.6323, 0.0000, 0.9900 ),
	( 0.5335, 0.0000, 0.9900 ),
	( 0.4346, 0.0000, 0.9900 ),
	( 0.3363, 0.0000, 0.9900 ),
	( 0.0984, 0.0000, 0.9900 ),
	( 0.0000, 0.0000, 0.9494 ),
	( 0.0000, 0.0000, 0.8820 ),
	( 0.0000, 0.0000, 0.8155 ),
	( 0.0000, 0.0000, 0.7480 ),
	( 0.0000, 0.0000, 0.6804 ),
	( 0.0000, 0.0000, 0.6045 ),
	( 0.0000, 0.0000, 0.5036 ),
	( 0.0063, 0.0617, 0.3724 ),
	( 0.0096, 0.1057, 0.2765 ),
	( 0.0109, 0.1349, 0.2249 ),
	( 0.0141, 0.1726, 0.2249 ),
	( 0.0209, 0.2273, 0.2548 ),
	( 0.0257, 0.2543, 0.2887 ),
	( 0.0333, 0.2741, 0.3453 ),
	( 0.0574, 0.3491, 0.4794 ),
	( 0.0730, 0.4022, 0.5242 ),
	( 0.0839, 0.4442, 0.5393 ),
	( 0.0940, 0.4826, 0.5465 ),
	( 0.1125, 0.5337, 0.5808 ),
	( 0.1228, 0.5695, 0.5852 ),
	( 0.1466, 0.6213, 0.6213 ),
	( 0.1847, 0.6887, 0.6887 ),
	( 0.2287, 0.7552, 0.7552 ),
	( 0.2810, 0.8226, 0.8226 ),
	( 0.3223, 0.8724, 0.8724 ),
	( 0.3528, 0.9058, 0.9058 ),
	( 0.3863, 0.9402, 0.9402 ),
	( 0.4210, 0.9736, 0.9736 ),
	( 0.4217, 0.9900, 0.9675 ),
	( 0.3873, 0.9844, 0.9218 ),
	( 0.3445, 0.9511, 0.8700 ),
	( 0.2788, 0.9455, 0.7482 ),
	( 0.2174, 0.9286, 0.6266 ),
	( 0.1730, 0.8944, 0.5382 ),
	( 0.1709, 0.8611, 0.5492 ),
	( 0.1526, 0.7998, 0.5295 ),
	( 0.1289, 0.7327, 0.4932 ),
	( 0.1030, 0.6708, 0.4391 ),
	( 0.0739, 0.6364, 0.3426 ),
	( 0.0591, 0.5754, 0.3074 ),
	( 0.0485, 0.5083, 0.2866 ),
	( 0.0388, 0.4416, 0.2649 ),
	( 0.0302, 0.3740, 0.2408 ),
	( 0.0281, 0.4133, 0.2101 ),
	( 0.0185, 0.4347, 0.1273 ),
	( 0.0157, 0.4121, 0.0000 ),
	( 0.1522, 0.4797, 0.0000 ),
	( 0.1900, 0.5473, 0.0000 ),
	( 0.2179, 0.6149, 0.0000 ),
	( 0.2694, 0.6824, 0.0000 ),
	( 0.3237, 0.7489, 0.0000 ),
	( 0.3933, 0.7909, 0.0000 ),
	( 0.4685, 0.8247, 0.0000 ),
	( 0.5449, 0.8580, 0.0000 ),
	( 0.6229, 0.8913, 0.0000 ),
	( 0.7209, 0.9253, 0.0000 ),
	( 0.8326, 0.9455, 0.0000 ),
	( 0.9430, 0.9430, 0.0000 ),
	( 0.9086, 0.9086, 0.0000 ),
	( 0.8996, 0.8646, 0.0000 ),
	( 0.8996, 0.8073, 0.0000 ),
	( 0.8996, 0.7353, 0.0000 ),
	( 0.8996, 0.6626, 0.0000 ),
	( 0.8996, 0.5904, 0.0000 ),
	( 0.8996, 0.5184, 0.0000 ),
	( 0.8996, 0.4464, 0.0000 ),
	( 0.8996, 0.3744, 0.0000 ),
	( 0.8996, 0.3024, 0.0000 ),
	( 0.8996, 0.2304, 0.0000 ),
	( 0.8984, 0.1568, 0.0000 ),
	( 0.8652, 0.0366, 0.0000 ),
	( 0.8080, 0.0000, 0.0000 ),
	( 0.7285, 0.0000, 0.0000 ),
	( 0.6277, 0.0000, 0.0000 ),
	( 0.5268, 0.0000, 0.0000 ),
	( 0.4260, 0.0000, 0.0000 ),
	( 0.3251, 0.0000, 0.0000 ),
	( 0.2242, 0.0000, 0.0000 ),
	( 0.1234, 0.0000, 0.0000 ),
	( 0.0900, 0.0000, 0.0000 ) )
	pal_Testu = plt.matplotlib.colors.LinearSegmentedColormap.from_list('pal_Testu',pal)
	return pal_Testu

def gen_pal_Testu2():
	pal = ( ( 1.0000, 1.0000, 1.0000 ),
	( 0.9923, 0.9753, 0.9985 ),
	( 0.9692, 0.9005, 0.9941 ),
	( 0.9460, 0.8258, 0.9897 ),
	( 0.9228, 0.7510, 0.9853 ),
	( 0.8996, 0.6763, 0.9809 ),
	( 0.8765, 0.6015, 0.9765 ),
	( 0.8533, 0.5268, 0.9721 ),
	( 0.8301, 0.4520, 0.9677 ),
	( 0.8070, 0.3773, 0.9633 ),
	( 0.7838, 0.3025, 0.9588 ),
	( 0.7606, 0.2278, 0.9544 ),
	( 0.7374, 0.1530, 0.9500 ),
	( 0.7221, 0.0783, 0.9563 ),
	( 0.7258, 0.0035, 0.9885 ),
	( 0.6323, 0.0000, 0.9900 ),
	( 0.5335, 0.0000, 0.9900 ),
	( 0.4346, 0.0000, 0.9900 ),
	( 0.3363, 0.0000, 0.9900 ),
	( 0.0984, 0.0000, 0.9900 ),
	( 0.0000, 0.0000, 0.9494 ),
	( 0.0000, 0.0000, 0.8820 ),
	( 0.0000, 0.0000, 0.8155 ),
	( 0.0000, 0.0000, 0.7480 ),
	( 0.0000, 0.0000, 0.6804 ),
	( 0.0000, 0.0000, 0.6045 ),
	( 0.0000, 0.0000, 0.5036 ),
	( 0.0063, 0.0617, 0.3724 ),
	( 0.0096, 0.1057, 0.2765 ),
	( 0.0109, 0.1349, 0.2249 ),
	( 0.0141, 0.1726, 0.2249 ),
	( 0.0209, 0.2273, 0.2548 ),
	( 0.0257, 0.2543, 0.2887 ),
	( 0.0333, 0.2741, 0.3453 ),
	( 0.0574, 0.3491, 0.4794 ),
	( 0.0730, 0.4022, 0.5242 ),
	( 0.0839, 0.4442, 0.5393 ),
	( 0.0940, 0.4826, 0.5465 ),
	( 0.1125, 0.5337, 0.5808 ),
	( 0.1228, 0.5695, 0.5852 ),
	( 0.1466, 0.6213, 0.6213 ),
	( 0.1847, 0.6887, 0.6887 ),
	( 0.2287, 0.7552, 0.7552 ),
	( 0.2810, 0.8226, 0.8226 ),
	( 0.3223, 0.8724, 0.8724 ),
	( 0.3528, 0.9058, 0.9058 ),
	( 0.3863, 0.9402, 0.9402 ),
	( 0.4210, 0.9736, 0.9736 ),
	( 0.4217, 0.9900, 0.9675 ),
	( 0.3873, 0.9844, 0.9218 ),
	( 0.3445, 0.9511, 0.8700 ),
	( 0.2788, 0.9455, 0.7482 ),
	( 0.2174, 0.9286, 0.6266 ),
	( 0.1730, 0.8944, 0.5382 ),
	( 0.1709, 0.8611, 0.5492 ),
	( 0.1526, 0.7998, 0.5295 ),
	( 0.1289, 0.7327, 0.4932 ),
	( 0.1030, 0.6708, 0.4391 ),
	( 0.0739, 0.6364, 0.3426 ),
	( 0.0591, 0.5754, 0.3074 ),
	( 0.0485, 0.5083, 0.2866 ),
	( 0.0388, 0.4416, 0.2649 ),
	( 0.0302, 0.3740, 0.2408 ),
	( 0.0281, 0.4133, 0.2101 ),
	( 0.0185, 0.4347, 0.1273 ),
	( 0.0157, 0.4121, 0.0000 ),
	( 0.1522, 0.4797, 0.0000 ),
	( 0.1900, 0.5473, 0.0000 ),
	( 0.2179, 0.6149, 0.0000 ),
	( 0.2694, 0.6824, 0.0000 ),
	( 0.3237, 0.7489, 0.0000 ),
	( 0.3933, 0.7909, 0.0000 ),
	( 0.4685, 0.8247, 0.0000 ),
	( 0.5449, 0.8580, 0.0000 ),
	( 0.6229, 0.8913, 0.0000 ),
	( 0.7209, 0.9253, 0.0000 ),
	( 0.8326, 0.9455, 0.0000 ),
	( 0.9430, 0.9430, 0.0000 ),
	( 0.9086, 0.9086, 0.0000 ),
	( 0.8996, 0.8646, 0.0000 ),
	( 0.8996, 0.8073, 0.0000 ),
	( 0.8996, 0.7353, 0.0000 ),
	( 0.8996, 0.6626, 0.0000 ),
	( 0.8996, 0.5904, 0.0000 ),
	( 0.8996, 0.5184, 0.0000 ),
	( 0.8996, 0.4464, 0.0000 ),
	( 0.8996, 0.3744, 0.0000 ),
	( 0.8996, 0.3024, 0.0000 ),
	( 0.8996, 0.2304, 0.0000 ),
	( 0.8984, 0.1568, 0.0000 ),
	( 0.8652, 0.0366, 0.0000 ),
	( 0.8080, 0.0000, 0.0000 ),
	( 0.7285, 0.0000, 0.0000 ),
	( 0.6277, 0.0000, 0.0000 ),
	( 0.5268, 0.0000, 0.0000 ),
	( 0.4260, 0.0000, 0.0000 ),
	( 0.3251, 0.0000, 0.0000 ),
	( 0.2242, 0.0000, 0.0000 ),
	( 0.1234, 0.0000, 0.0000 ),
	( 0.0900, 0.0000, 0.0000 ) )
	pal_Testu2 = plt.matplotlib.colors.LinearSegmentedColormap.from_list('pal_Testu2',pal)
	return pal_Testu2

def gen_pal_blue2red2():
	pal = ( ( 0.0000, 0.0000, 0.800 ),
	( 0.0000, 0.2500, 1.0000 ),
	( 0.0000, 0.5000, 1.0000 ),
	( 0.0000, 0.7500, 1.0000 ),
	( 0.0000, 0.8300, 1.0000 ),
	( 0.2500, 1.0000, 1.0000 ),
	( 0.7840, 1.0000, 1.0000 ),
	( 0.9600, 0.9600, 0.9600 ),
	( 1.0000, 0.6300, 0.6300 ),
	( 1.0000, 0.5000, 0.5000 ),
	( 1.0000, 0.3800, 0.3800 ),
	( 1.0000, 0.2941, 0.2941 ),
	( 1.0000, 0.1300, 0.1300 ),
	( 0.9297, 0.1719, 0.1719 ),
	( 0.8000, 0.0000, 0.0000 ) )
	pal_blue2red2 = plt.matplotlib.colors.LinearSegmentedColormap.from_list('pal_blue2red2',pal)
	return pal_blue2red2

def gen_pal_blue2red3():
	pal = ( ( 0.0000, 0.0000, 0.800 ), 
	( 0.0000, 0.2500, 1.0000 ),
	( 0.0000, 0.5000, 1.0000 ),
	( 0.0000, 0.7500, 1.0000 ),
	( 0.0000, 0.8300, 1.0000 ),
	( 0.2500, 1.0000, 1.0000 ),
	( 0.7840, 1.0000, 1.0000 ),
	( 1.0000, 0.6300, 0.6300 ),
	( 1.0000, 0.5000, 0.5000 ),
	( 1.0000, 0.3800, 0.3800 ),
	( 1.0000, 0.2941, 0.2941 ),
	( 1.0000, 0.1300, 0.1300 ),
	( 0.9297, 0.1719, 0.1719 ),
	( 0.8000, 0.0000, 0.0000 ) )
	pal_blue2red3 = plt.matplotlib.colors.LinearSegmentedColormap.from_list('pal_blue2red3',pal)
	return pal_blue2red3

def gen_pal_ferretblue2red():
        pal = ( ( 0.0000, 0.2000, 1.0000 ),
	( 0.0000, 0.3137, 1.0000 ),
	( 0.0000, 0.4353, 1.0000 ),
	( 0.0000, 0.5529, 1.0000 ),
	( 0.0824, 0.6667, 1.0000 ),
	( 0.2314, 0.7843, 1.0000 ),
	( 0.3765, 0.9059, 1.0000 ),
	( 0.5686, 1.0000, 1.0000 ),
	( 0.8431, 1.0000, 0.9608 ),
	( 0.9608, 1.0000, 0.8431 ),
	( 1.0000, 1.0000, 0.5686 ),
	( 1.0000, 0.9059, 0.3765 ),
	( 1.0000, 0.7843, 0.2314 ),
	( 1.0000, 0.6667, 0.0824 ),
	( 1.0000, 0.5294, 0.0000 ),
	( 1.0000, 0.3529, 0.0000 ),
	( 1.0000, 0.1765, 0.0000 ),
	( 1.0000, 0.0000, 0.0000 ) )
	pal_ferretblue2red = plt.matplotlib.colors.LinearSegmentedColormap.from_list('pal_ferretblue2red',pal)
	return pal_ferretblue2red

def gen_pal_noaa_blue2white():
        pal = ( ( 0.0000, 0.0275, 0.5294 ),
	( 0.0000, 0.3725, 0.8235 ),
	( 0.0000, 0.3961, 0.8510 ),
	( 0.0000, 0.4392, 0.8745 ),
	( 0.0000, 0.4667, 0.9020 ),
	( 0.0000, 0.5137, 0.9333 ),
	( 0.0000, 0.5373, 0.9647 ),
	( 0.0000, 0.5765, 0.9882 ),
	( 0.0000, 0.6000, 1.0000 ),
	( 0.0667, 0.6314, 1.0000 ),
	( 0.1451, 0.6627, 1.0000 ),
	( 0.2392, 0.7020, 1.0000 ),
	( 0.3137, 0.7333, 1.0000 ),
	( 0.4000, 0.7647, 1.0000 ),
	( 0.4784, 0.7961, 1.0000 ),
	( 0.5725, 0.8314, 1.0000 ),
	( 0.6510, 0.8627, 1.0000 ),
	( 0.7333, 0.8941, 1.0000 ),
	( 0.8118, 0.9255, 1.0000 ),
	( 0.8902, 0.9569, 1.0000 ),
	( 0.9725, 0.9882, 1.0000 ) )
	pal_noaa_blue2white = plt.matplotlib.colors.LinearSegmentedColormap.from_list('pal_noaa_blue2white',pal)
	return pal_noaa_blue2white 

def gen_pal_diff():
	pal = ( ( 0.0000, 0.0000, 0.4000 ),
	( 0.0000, 0.0000, 0.6000 ),
	( 0.0000, 0.2000, 1.0000 ),
	( 0.0000, 0.4000, 1.0000 ),
	( 0.0000, 0.6000, 1.0000 ),
	( 0.0000, 0.8000, 1.0000 ),
	( 0.0000, 1.0000, 1.0000 ),
	( 0.2000, 1.0000, 1.0000 ),
	( 0.4000, 1.0000, 0.8000 ),
	( 1.0000, 1.0000, 1.0000 ),
	( 1.0000, 1.0000, 1.0000 ),
	( 1.0000, 1.0000, 0.2000 ),
	( 1.0000, 1.0000, 0.0000 ),
	( 1.0000, 0.8000, 0.0000 ),
	( 1.0000, 0.6000, 0.0000 ),
	( 1.0000, 0.4000, 0.0000 ),
	( 1.0000, 0.2000, 0.0000 ),
	( 0.6000, 0.0000, 0.0000 ),
	( 0.4000, 0.0000, 0.0000 ),
	( 0.0000, 0.0000, 0.0000 ) )
	pal_diff = plt.matplotlib.colors.LinearSegmentedColormap.from_list('pal_diff',pal)
	return pal_diff

